<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="concept-7076" domains="(topic concept)                            (topic hi-d)                            (topic ut-d)                            (topic indexing-d)                             (topic pr-d)                            (topic sw-d)                            (topic ui-d)   " ditaarch:DITAArchVersion="1.2" class="- topic/topic concept/concept "><title class="- topic/title ">Connecting <ph conkeyref="ProductNames/bolt" class="- topic/ph "/> to <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/></title><shortdesc class="- topic/shortdesc ">Configure <ph conkeyref="ProductNames/bolt" class="- topic/ph "/> to connect to <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/>.</shortdesc><prolog class="- topic/prolog "><author type="creator" translate="no" class="- topic/author ">Kate Lopresti &lt;kate.lopresti@puppet.com&gt;</author></prolog><conbody class="- topic/body  concept/conbody "><section class="- topic/section "><title class="- topic/title "><ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> authorization</title><p class="- topic/p "><ph conkeyref="ProductNames/bolt" class="- topic/ph "/> can authenticate with <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> through an SSL client certificate or a <ph conkeyref="ProductNames/pe" class="- topic/ph "/> RBAC token.</p></section><section class="- topic/section "><title class="- topic/title ">Client certificate</title><p class="- topic/p ">Add the certname for the certificate you want to authenticate with to&#160;/<codeph translate="no" class="+ topic/ph pr-d/codeph ">etc/puppetlabs/puppetdb/certificate-whitelist</codeph>. This certificate has full access to all <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> API endpoints and can read all data, push new data, or run commands on <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/>. To test the certificate you run the following curl command.<codeblock translate="no" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">curl -X GET $SERVER_URL/pdb/query/v4 --data-urlencode 'query=nodes[certname] {}' --cert $CERT_PATH --key $KEY_PATH --cacert $CACERT_PATH</codeblock></p></section><section class="- topic/section "><title class="- topic/title ">Token-based authentication with <ph conkeyref="ProductNames/pe" class="- topic/ph "/> RBAC token</title><p class="- topic/p ">If you use <ph conkeyref="ProductNames/pe_long" class="- topic/ph "/> you can grant more restricted access to <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> with a <ph conkeyref="ProductNames/pe" class="- topic/ph "/> role-based access control (RBAC) token. </p><p class="- topic/p ">
            <ol class="- topic/ol "><li class="- topic/li ">
                  <p class="- topic/p ">In PE, verify you are assigned to a role that has the appropriate RBAC permission. It needs the permission type <uicontrol class="+ topic/ph ui-d/uicontrol "> Nodes </uicontrol> and the action <uicontrol class="+ topic/ph ui-d/uicontrol ">View node data from&#160;PuppetDB</uicontrol>. </p>
               </li><li class="- topic/li ">
                  <p class="- topic/p ">From the command line, run&#160;<codeph translate="no" class="+ topic/ph pr-d/codeph ">puppet-access login --lifetime &lt;TIME PERIOD&gt;</codeph>.</p>
               </li><li class="- topic/li ">
                  <p class="- topic/p ">When prompted, enter the same username and password that you use to log into the PE console. The token is generated and stored in a file for later use. The default location for storing the token is&#160;<userinput class="+ topic/ph sw-d/userinput ">~/.puppetlabs/token</userinput>.&#160;</p>
               </li><li class="- topic/li ">
                  <p class="- topic/p ">Verify that authentication is working with the following curl command.<codeblock translate="no" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">curl -X GET https://$SERVER_URL/pdb/query/v4 --data-urlencode 'query=nodes[certname] {}' -H "X-Authentication: `cat ~/.puppetlabs/token`" --cacert $CACERT_PATH</codeblock></p>
               </li></ol>
         </p></section><section class="- topic/section "><title class="- topic/title ">Configuration</title><p class="- topic/p ">To configure the <ph conkeyref="ProductNames/bolt" class="- topic/ph "/><ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> client, add a&#160;<codeph translate="no" class="+ topic/ph pr-d/codeph ">puppetdb</codeph>&#160;section to <codeph translate="no" class="+ topic/ph pr-d/codeph ">~/.puppetlabs/bolt/bolt.yaml</codeph> with the following values:</p><ul class="- topic/ul "><li class="- topic/li "><codeph translate="no" class="+ topic/ph pr-d/codeph ">server-urls</codeph>: An array containing the PuppetDB host to connect to. This should include the protocol&#160;<codeph translate="no" class="+ topic/ph pr-d/codeph ">https</codeph>&#160;and the port is usually&#160;<codeph translate="no" class="+ topic/ph pr-d/codeph ">8081</codeph>. For example&#160;<codeph translate="no" class="+ topic/ph pr-d/codeph ">https://my-master.example.com:8081</codeph></li><li class="- topic/li "><codeph translate="no" class="+ topic/ph pr-d/codeph ">cacert</codeph>: The path the ca certificate for puppetdb</li></ul><p class="- topic/p ">If you are using certificate authentication also set:</p><ul class="- topic/ul "><li class="- topic/li "><codeph translate="no" class="+ topic/ph pr-d/codeph ">cert</codeph>: The path to the client certificate file to use for authentication</li><li class="- topic/li "><codeph translate="no" class="+ topic/ph pr-d/codeph ">key</codeph>: The private key for that certificate</li></ul><p class="- topic/p ">If you are using a <ph conkeyref="ProductNames/pe" class="- topic/ph "/> RBAC token set:</p><ul class="- topic/ul "><li class="- topic/li "><codeph translate="no" class="+ topic/ph pr-d/codeph ">token</codeph>: The path to the <ph conkeyref="ProductNames/pe" class="- topic/ph "/> RBAC Token.</li></ul><p class="- topic/p ">For example, to use certificate authentication:</p><codeblock translate="no" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">puppetdb:
  server_urls: ["https://puppet.example.com:8081"]
  cacert: /etc/puppetlabs/puppet/ssl/certs/ca.pem
  cert: /etc/puppetlabs/puppet/ssl/certs/my-host.example.com.pem
  key: /etc/puppetlabs/puppet/ssl/private_keys/my-host.example.com.pem</codeblock><p class="- topic/p ">If <ph conkeyref="ProductNames/pe" class="- topic/ph "/> is installed and <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> is not defined in a config file, <ph conkeyref="ProductNames/bolt" class="- topic/ph "/> uses the <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/> config defined in either: <codeph translate="no" class="+ topic/ph pr-d/codeph ">$HOME/.puppetlabs/client-tools/puppetdb.conf </codeph>or <codeph translate="no" class="+ topic/ph pr-d/codeph ">/etc/puppetlabs/client-tools/puppetdb.conf</codeph> (<ph conkeyref="ProductNames/windows" class="- topic/ph "/>: <codeph translate="no" class="+ topic/ph pr-d/codeph ">C:\ProgramData\PuppetLabs\client-tools\puppetdb.conf</codeph>). </p><p class="- topic/p ">
            <note type="important" class="- topic/note "><ph conkeyref="ProductNames/bolt" class="- topic/ph "/> does not merge config files into a conf.d format the way that pe-client-tools does.</note>
         </p><p class="- topic/p ">To use <ph conkeyref="ProductNames/pe" class="- topic/ph "/> RBAC authentication:</p><codeblock translate="no" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">puppetdb:
  server_urls: ["https://puppet.example.com:8081"]
  cacert: /etc/puppetlabs/puppet/ssl/certs/ca.pem
  token: ~/.puppetlabs/token</codeblock></section><section class="- topic/section "><title class="- topic/title ">Testing</title><p class="- topic/p ">You can test your configuration with the following plan, which returns a list of all nodes in <ph conkeyref="ProductNames/puppetdb" class="- topic/ph "/>.</p><codeblock translate="no" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">plan pdb_test {
  return(puppetdb_query("nodes[certname] {}"))
}</codeblock></section></conbody></concept>
