<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.2" domains="(topic concept)                            (topic hi-d)                            (topic ut-d)                            (topic indexing-d)                             (topic pr-d)                            (topic sw-d)                            (topic ui-d)   " id="concept-9866" class="- topic/topic concept/concept "><title class="- topic/title "><ph conkeyref="ProductNames/puppet" class="- topic/ph "/> tasks and plans</title><shortdesc class="- topic/shortdesc ">Automate your workflow with tasks and plans.</shortdesc><prolog class="- topic/prolog "><author translate="no" type="creator" class="- topic/author ">Jean Bond &lt;jean@puppet.com&gt;</author></prolog><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">Sometimes you need to do work in your infrastructure that isn't about monitoring and enforcing the desired state of machines. You might need to restart a service, run a troubleshooting script, or get a list of the network connections to a given node. You perform actions like these with 

         <ph conkeyref="ProductNames/puppet" class="- topic/ph "/> tasks and plans. </p><section class="- topic/section "><title class="- topic/title ">Tasks</title><p class="- topic/p "> Tasks are single actions that you run on target machines in your infrastructure. You use tasks to make as-needed changes to remote systems.</p><p class="- topic/p ">You can write tasks in any programming language that can run on the target nodes, such as Bash, Python, or 

            <ph conkeyref="ProductNames/ruby" class="- topic/ph "/>. Tasks are packaged within modules, so you can reuse, download, and share tasks on the 

            <ph conkeyref="ProductNames/forge" class="- topic/ph "/>. Task metadata describes the task, validates input, and controls how the task runner executes the task.</p></section><section class="- topic/section "><title class="- topic/title ">Plans</title><p class="- topic/p ">Plans are sets of tasks that can be combined with other logic. This allows you to do complex task operations, such as running multiple tasks with one command, computing values for the input for a task, or running certain tasks based on results of another task. You write plans in the 

            <ph conkeyref="ProductNames/puppet" class="- topic/ph "/> language. And like tasks, plans are packaged in modules and can be shared on the 

            <ph conkeyref="ProductNames/forge" class="- topic/ph "/>. </p></section></conbody></concept>
